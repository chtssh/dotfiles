# Autocompletion {{{
[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_i = 1
hook_source = 'source ~/.config/nvim/plugins/deoplete.vim'

[[plugins]]
repo = 'zchee/deoplete-jedi'
depends = 'deoplete.nvim'
on_ft = 'python'

[[plugins]]
repo = 'zchee/deoplete-clang'
depends = 'deoplete.nvim'
on_ft = ['c', 'cpp', 'h']
hook_source = '''
  let g:deoplete#sources#clang#libclang_path = '/usr/lib/libclang.so'
  let g:deoplete#sources#clang#clang_header = '/usr/lib/clang'
  let g:deoplete#sources#clang#sort_algo = 'priority'
'''

[[plugins]]
repo = 'Shougo/neco-vim'
on_ft = 'vim'

[[plugins]]
repo = 'ujihisa/neco-look'
on_source = 'deoplete.nvim'
 
[[plugins]]
repo = 'Shougo/neoinclude.vim'
on_source = 'deoplete.nvim'
hook_add = '''
  let g:neoinclude#exts = {}
  let g:neoinclude#exts.cpp = ['', 'h', 'hpp', 'hxx', 'H']
'''
#}}}

[[plugins]]
repo = 'Shougo/denite.nvim'
on_cmd = 'Denite'
hook_source = '''
  " source ~/.vim/rc/plugins/denite.rc.vim
'''

# Unite {{{
[[plugins]]
repo = 'Shougo/unite.vim'
hook_source = 'source ~/.config/nvim/plugins/unite.vim'
hook_add = '''
" File
  nnoremap <silent> <Leader>f
        \ :<C-u>Unite -start-insert file_rec/neovim<CR>
" Tabs
  nnoremap <silent> <Leader>t
        \ :<C-u>Unite -auto-resize -select=`tabpagenr()-1` tab<CR>
" Jump
  nnoremap <silent> <Leader>k
        \ :<C-u>Unite change jump<CR>
" Grep
  nnoremap <silent> <Leader>g
        \ :<C-u>Unite grep -buffer-name=grep`tabpagenr()`
        \ -auto-preview -no-split -no-empty -resume<CR>
" Search
  nnoremap <silent> /
        \ :<C-u>Unite -buffer-name=search%`bufnr('%')`
        \ -start-insert line:forward:wrap<CR>
  nnoremap <silent> *
        \ :<C-u>UniteWithCursorWord -buffer-name=search%`bufnr('%')`
        \ line:forward:wrap<CR>
" Buffer
  nnoremap <silent> <Leader>b
        \ :<C-u>Unite -auto-resize buffer<CR>
  nnoremap <silent> <Leader>s
        \ :<C-u>Unite -buffer-name=files -no-split -multi-line -unique -silent
        \ jump_point file_point file_mru
        \ `finddir('.git', ';') != '' ? 'file_rec/git' : ''`
        \ buffer_tab:- file file/new<CR>
" Menu
  nnoremap <silent> <Leader>m
        \ :<C-u>Unite -auto-resize menu<CR>
'''

[[plugins]]
repo = 'Shougo/neomru.vim'
on_source = 'unite.vim'
hook_add = '''
  nnoremap <silent> <Leader>s
        \ :<C-u>Unite -buffer-name=files -no-split -multi-line -unique -silent
        \ jump_point file_point file_mru
        \ `finddir('.git', ';') != '' ? 'file_rec/git' : ''`
        \ buffer_tab:- file file/new<CR>
'''

[[plugins]]
repo = 'Shougo/unite-outline'
on_source = 'unite.vim'
hook_add = '''
  nnoremap <silent> <Leader>o
        \ :<C-u>Unite outline -buffer-name=buffers -no-start-insert -resume -auto-resize -no-empty<CR>
'''

[[plugins]]
repo = 'tsukkee/unite-tag'
on_source = 'unite.vim'
hook_add = '''
  nnoremap <silent><expr> <C-]> &filetype == 'help' ?  "<C-]>" :
        \ ":<C-u>UniteWithCursorWord -buffer-name=tag -immediately
        \ tag tag/include<CR>"
'''

[[plugins]]
repo = 'Shougo/junkfile.vim'
on_source = 'unite.vim'
hook_add = '''
  nnoremap <silent> <Leader>e
        \ :<C-u>Unite junkfile/new junkfile -start-insert<CR>
'''

[[plugins]]
repo = 'Shougo/neoyank.vim'
on_source = 'unite.vim'
hook_add = '''
  nnoremap <silent> <Leader>r
        \ :<C-u>Unite -buffer-name=register
        \ -default-action=append register history/yank<CR>
'''

#}}}

[[plugins]]
repo = 'Shougo/echodoc.vim'
on_event = 'CompleteDone'
hook_add = '''
  set noshowmode
  set shortmess+=cF " Disable ins and file message
  set cpoptions-=m " Wait half a second or until a character is typed.
'''
hook_source = 'call echodoc#enable()'

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = 'neosnippet-snippets'
on_event = 'InsertCharPre'
on_ft = 'snippet'
hook_source = 'source ~/.config/nvim/plugins/neosnippet.vim'

[[plugins]]
repo = 'tyru/caw.vim'
on_map = {nx = '<Plug>'}
hook_add = '''
  nmap <buffer> gc <Plug>(caw:prefix)
  xmap <buffer> gc <Plug>(caw:prefix)
  nmap <buffer> gcc <Plug>(caw:hatpos:toggle)
  xmap <buffer> gcc <Plug>(caw:hatpos:toggle)
'''

[[plugins]]
repo = 'rhysd/vim-operator-surround'
depends = 'vim-operator-user'
on_map = {n = '<Plug>'}
hook_add = '''
  map <silent>sa <Plug>(operator-surround-append)
  map <silent>sd <Plug>(operator-surround-delete)
  map <silent>sr <Plug>(operator-surround-replace)
'''

[[plugins]]
repo = 'milkypostman/vim-togglelist'
on_if = 1

[[plugins]]
repo = 'neomake/neomake'
on_ft = ['c', 'cpp', 'h']
hook_add = 'source ~/.config/nvim/plugins/neomake.vim'
